name: Build and Push Docker Images

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main 

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image from root directory
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            romansth/melodyquest-frontend:latest
            romansth/melodyquest-frontend:${{ github.sha }}

      - name: Build and push Docker image from server directory
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: |
            romansth/melodyquest-backend:latest
            romansth/melodyquest-backend:${{ github.sha }}

      - name: Post Docker Hub logout
        run: docker logout

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull romansth/melodyquest-backend:latest
            sudo docker stop romansth/melodyquest-backend:latest || true
            sudo docker rm romansth/melodyquest-backend:latest || true
            sudo docker run -d --name romansth/melodyquest-backend:latest -p 8004:8004 \
              -e SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }} \
              -e SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }} \
              -e SPOTIFY_TOKEN=${{ secrets.SPOTIFY_TOKEN }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
              -e SERVER_URL=${{ secrets.SERVER_URL }} \
              -e REACT_APP_SERVER_URL=${{ secrets.REACT_APP_SERVER_URL }} \
              -e CLIENT_URL=${{ secrets.CLIENT_URL }} \
              -e LYRICS_API_KEY=${{ secrets.LYRICS_API_KEY }} \
              romansth/melodyquest-backend:latest

            sudo docker pull romansth/melodyquest-frontend:latest
            sudo docker stop romansth/melodyquest-frontend:latest || true
            sudo docker rm romansth/melodyquest-frontend:latest || true
            sudo docker run -d --name romansth/melodyquest-frontend:latest -p 3052:3052 \
              -e SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }} \
              -e SPOTIFY_CLIENT_SECRET=${{ secrets.SPOTIFY_CLIENT_SECRET }} \
              -e SPOTIFY_TOKEN=${{ secrets.SPOTIFY_TOKEN }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
              -e SERVER_URL=${{ secrets.SERVER_URL }} \
              -e REACT_APP_SERVER_URL=${{ secrets.REACT_APP_SERVER_URL }} \
              -e CLIENT_URL=${{ secrets.CLIENT_URL }} \
              -e LYRICS_API_KEY=${{ secrets.LYRICS_API_KEY }} \
              romansth/melodyquest-frontend:latest